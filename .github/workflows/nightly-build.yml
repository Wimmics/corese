name: Nightly Build

on:
    push:
        branches:
            - development
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest

        outputs:
            short_commit: ${{ steps.vars.outputs.short_commit }}
            date: ${{ steps.date.outputs.date }}

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
              with:
                  ref: development

            - name: Set up JDK 11
              uses: actions/setup-java@v4
              with:
                  distribution: 'temurin'
                  java-version: '11'

            - name: Build with Maven
              run: mvn clean install

            - name: Get short commit hash
              id: vars
              run: echo "short_commit=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

            - name: Get date
              id: date
              run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_ENV

            - name: Rename Artifacts
              run: |
                  mv $(find ./corese-core/target/ -name 'corese-core-*-jar-with-dependencies.jar') ./corese-core/target/corese-core-${{ env.short_commit }}-nightly.jar
                  mv $(find ./corese-command/target/ -name 'corese-command-*.jar') ./corese-command/target/corese-command-${{ env.short_commit }}-nightly.jar
                  mv $(find ./corese-gui/target/ -name 'corese-gui-*.jar') ./corese-gui/target/corese-gui-${{ env.short_commit }}-nightly.jar
                  mv $(find ./corese-jena/target/ -name 'corese-jena-*.jar') ./corese-jena/target/corese-jena-${{ env.short_commit }}-nightly.jar
                  mv $(find ./corese-rdf4j/target/ -name 'corese-rdf4j-*.jar') ./corese-rdf4j/target/corese-rdf4j-${{ env.short_commit }}-nightly.jar
                  mv $(find ./corese-server/target/ -name 'corese-server-*.jar') ./corese-server/target/corese-server-${{ env.short_commit }}-nightly.jar

            - name: Upload Build Artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: nightly-build
                  path: |
                      ./corese-core/target/corese-core-${{ env.short_commit }}-nightly.jar
                      ./corese-command/target/corese-command-${{ env.short_commit }}-nightly.jar
                      ./corese-gui/target/corese-gui-${{ env.short_commit }}-nightly.jar
                      ./corese-jena/target/corese-jena-${{ env.short_commit }}-nightly.jar
                      ./corese-rdf4j/target/corese-rdf4j-${{ env.short_commit }}-nightly.jar
                      ./corese-server/target/corese-server-${{ env.short_commit }}-nightly.jar

    delete_previous_prerelease:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
              with:
                  ref: development

            - name: Delete previous nightly tag
              if: ${{ needs.build.result == 'success' }}
              run: |
                  latest_nightly_tag=$(gh release list --limit 1 --exclude-drafts --json tagName,isPrerelease -q '.[] | select(.isPrerelease) | .tagName')
                  if [ -n "$latest_nightly_tag" ]; then
                    gh release delete $latest_nightly_tag -y
                    gh api --method DELETE "/repos/${{ github.repository }}/git/refs/tags/$latest_nightly_tag"
                  else
                    echo "No previous nightly tag found."
                  fi
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    create_prerelease:
        runs-on: ubuntu-latest
        needs: delete_previous_prerelease
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
              with:
                  ref: development

            - name: Download Build Artifacts
              uses: actions/download-artifact@v4
              with:
                  name: nightly-build
                  path: ./artifacts

            - name: Create new prerelease
              run: |
                  tag_name="nightly-${{ env.date }}-${{ env.short_commit }}"
                  gh release create $tag_name -p -t "Nightly Build ${{ env.short_commit }}" -n "This is an automated nightly build. It is a development version and not stable." --target development
                  gh release upload $tag_name ./artifacts/corese-core-${{ env.short_commit }}-nightly.jar ./artifacts/corese-command-${{ env.short_commit }}-nightly.jar ./artifacts/corese-gui-${{ env.short_commit }}-nightly.jar ./artifacts/corese-jena-${{ env.short_commit }}-nightly.jar ./artifacts/corese-rdf4j-${{ env.short_commit }}-nightly.jar ./artifacts/corese-server-${{ env.short_commit }}-nightly.jar
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
